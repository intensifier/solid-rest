!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.SolidRestBrowser=t():e.SolidRestBrowser=t()}(self,(function(){return(()=>{"use strict";var e,t={d:(e,r)=>{for(var o in r)t.o(r,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:r[o]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t)},r={};t.d(r,{default:()=>f});var o=new Uint8Array(16);function s(){if(!e&&!(e="undefined"!=typeof crypto&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||"undefined"!=typeof msCrypto&&"function"==typeof msCrypto.getRandomValues&&msCrypto.getRandomValues.bind(msCrypto)))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return e(o)}const n=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i,i=function(e){return"string"==typeof e&&n.test(e)};for(var a=[],c=0;c<256;++c)a.push((c+256).toString(16).substr(1));const l=function(e,t,r){var o=(e=e||{}).random||(e.rng||s)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,t){r=r||0;for(var n=0;n<16;++n)t[r+n]=o[n];return t}return function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=(a[e[t+0]]+a[e[t+1]]+a[e[t+2]]+a[e[t+3]]+"-"+a[e[t+4]]+a[e[t+5]]+"-"+a[e[t+6]]+a[e[t+7]]+"-"+a[e[t+8]]+a[e[t+9]]+"-"+a[e[t+10]]+a[e[t+11]]+a[e[t+12]]+a[e[t+13]]+a[e[t+14]]+a[e[t+15]]).toLowerCase();if(!i(r))throw TypeError("Stringified UUID is invalid");return r}(o)};class f{constructor(e){e||={},this.DEBUG=e.DEBUG||0}async fetch(e,t){t||={},t.method||="GET";let r=e.replace(/browser:\//,"");e=new URL(e);const o={ok:!0,status:200,headers:{etag:l(),"wac-allow":'user="read write append control",public="read"'}},s={ok:!1,status:500};if("PUT"===t.method)try{return await this.make_containers(r),await this.writeFile(r,t.body),await this.writeFile(r+".type",t.headers["content-type"]),new Response(null,o)}catch(e){throw console.log(e),e}else{if("GET"!==t.method)return s;try{let e=await this.readFile(r);return o.headers["content-type"]=await this.readFile(r+".type"),new Response(e,o)}catch(e){return console.log(e),s.statusText=e,s}}}async configure(e){e||={fs:"MountableFileSystem",options:{"/LocalStorage":{fs:"LocalStorage",options:{}},"/HTML5FS":{fs:"HTML5FS",options:{size:1e4}},"/IndexedDB":{fs:"IndexedDB",options:{storeName:"IndexedDB"}}}};const t=this;return new Promise(((r,o)=>{BrowserFS.configure(e,(async function(e,s){return e?o(e):(t.fs=BrowserFS.BFSRequire("fs"),r())}))}))}async configFetcher(e,t){if(t||={},await this.configure(t.browserFSconfig),t.httpOnly)return $rdf.fetcher(e,t);const r={browser:this,http:t.fetch};return t.fetch=(e,t)=>{const o=e.replace(/:\/.*/,"").replace(/s$/,"");return r[o].fetch(e,t)},$rdf.fetcher(e,t)}async writeFile(e,t){return this.log("Writing to "+e),t||="",new Promise(((r,o)=>{this.fs.writeFile(e,t,"utf8",(e=>e?o(e):r()))}))}async readFile(e){return new Promise(((t,r)=>{this.fs.readFile(e,"utf8",((e,o)=>e?r(e):t(o)))}))}async make_containers(e){let t=[],r=this._getParent(e);for(;r&&!await this.exists(r);)t.push(r),r=this._getParent(r);for(;t.length;){let e=t.pop().slice(0,-1);this.log("Creating container ",e);try{await this.fs.mkdir(e)}catch(e){console.warn(e)}}Promise.resolve()}_getParent(e){for("object"==typeof e&&(e=e.href);e.endsWith("/");)e=e.slice(0,-1);return e.includes("/")?e.substring(0,e.lastIndexOf("/"))+"/":null}async exists(e){try{return"ENOENT"===(await this.readFolder(e)).code?Promise.resolve(!1):(this.log("exists",e),Promise.resolve(!0))}catch(t){try{return"ENOENT"===(await this.readFile(e)).code?Promise.resolve(!1):(this.log("exists",e),Promise.resolve(!0))}catch(t){return this.log("does not exist",e),Promise.resolve(!1)}}}readFolder(e){return new Promise((async(t,r)=>{try{this.fs.readdir(e,(async(e,r)=>{if(!e)return t(r);t(e)}))}catch(e){t(e)}}))}async dump(e){e||="/","/"!=(e=e.replace(/^\/\//,"/"))&&(e+="/");let t=await this.readFolder(e);if("string"!=typeof t)for(let e of t){let t=await this.readFolder(e);console.log(e,t)}}log(...e){this.DEBUG&&console.log(e)}}return r.default})()}));
//# sourceMappingURL=solid-rest-browser.bundle.js.map