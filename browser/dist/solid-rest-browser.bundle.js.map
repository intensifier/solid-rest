{"version":3,"file":"solid-rest-browser.bundle.js","mappings":"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","sources":["webpack://SolidRestBrowser/webpack/universalModuleDefinition","webpack://SolidRestBrowser/webpack/bootstrap","webpack://SolidRestBrowser/./node_modules/uuid/dist/esm-browser/rng.js","webpack://SolidRestBrowser/webpack/runtime/define property getters","webpack://SolidRestBrowser/webpack/runtime/hasOwnProperty shorthand","webpack://SolidRestBrowser/./node_modules/uuid/dist/esm-browser/regex.js","webpack://SolidRestBrowser/./node_modules/uuid/dist/esm-browser/validate.js","webpack://SolidRestBrowser/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://SolidRestBrowser/./node_modules/uuid/dist/esm-browser/v4.js","webpack://SolidRestBrowser/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"SolidRestBrowser\"] = factory();\n\telse\n\t\troot[\"SolidRestBrowser\"] = factory();\n})(self, function() {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import {v4 as uuid} from 'uuid';\n\nexport default class SolidRestBrowser {\n\n  constructor(options){\n    options ||={}\n    this.DEBUG = options.DEBUG || 0;\n  }\n\n\n  async fetch(uri,options) {\n    options ||= {};\n    options.method ||= 'GET';\n    let fn = uri.replace(/browser:\\//,'');\n    const isContainer = fn.endsWith('/');\n    uri = new URL( uri );\n    let content;\n    const success =  {\n      ok:true,\n      status:200,\n      statusText:\"OK\",\n      headers : {\n        \"etag\"         : uuid(),\n        \"wac-allow\"    : `user=\"read write append control\",public=\"read\"`,\n        \"x-powered-by\" : \"Solid Rest Browser\",\n        \"date\"         : (new Date()).toString(),\n      },\n    }\n    const failure =  { ok:false, status:500 }\n    if(options.method==='PUT'){\n      try { \n        await this.make_containers(fn); // creates intermediate folders\n        if(!isContainer) {\n          await this.writeFile(fn,options.body); \n          await this.writeFile(fn+'.type',options.headers['content-type']);\n        }\n        success.status = \"201\";\n        success.statusText = \"Created\";\n        return new Response(null,success);\n      }\n      catch(e){ console.log(e); throw e; }\n    }\n    else if(options.method==='GET'){\n      try { \n        if(isContainer){\n          content = await this.getContainer(fn)|| \"\"; \n          success.headers['content-type'] = 'text/turtle';\n        }\n        else {\n          content = await this.readFile(fn) || \"\"; \n          success.headers['content-type'] = await this.readFile(fn+'.type');\n        }\n        return new Response(content,success);\n      }\n      catch(e){ console.log(e); failure.statusText=e; return(failure); }\n    }\n    else return(failure);\n  }\n\n  async configure(config){\n    config ||= {\n      fs: \"MountableFileSystem\",\n      options: {\n        '/LocalStorage':{ fs:\"LocalStorage\",options:{} },\n        '/HTML5FS'     :{ fs:\"HTML5FS\",options:{size:10000} },\n        '/IndexedDB'   :{ fs:\"IndexedDB\",options:{storeName:\"IndexedDB\"} }\n      }\n    }\n    const self = this;\n    return new Promise((resolve,reject)=>{\n      BrowserFS.configure( config, async function(e,fs) {\n        if(e) return reject(e);\n        self.fs = BrowserFS.BFSRequire('fs');\n        // self.fs.writeFile('/IndexedDB/.dummy','','utf8');\n        return resolve();\n      })\n    });\n  }\n  async configFetcher(kb,options){\n    options ||= {};\n    await this.configure(options.browserFSconfig);\n    if(options.httpOnly)return $rdf.fetcher(kb,options);\n    const scheme = {\n      browser : this,\n      http : options.fetch\n    }\n    const schemeFetch = (uri,options)=>{\n      const currentScheme = uri.replace(/:\\/.*/,'').replace(/s$/,'');\n      return scheme[currentScheme].fetch(uri,options);\n    }\n    options.fetch = schemeFetch;\n    return $rdf.fetcher(kb,options);  \n  }\n\n  async writeFile(uri,content){\n    this.log('Writing to '+uri);\n    content ||= \"\";\n    return new Promise((resolve,reject)=>{\n      this.fs.writeFile(uri,content,'utf8',(err)=>{\n        if(err) return reject(err);\n        else return resolve();\n      })\n    });\n  }\n\n  async readFile(uri){\n    return new Promise((resolve,reject)=>{\n      this.fs.readFile(uri,'utf8',(err,content)=>{\n        if(err) return reject(err);\n        else return resolve(content);\n      })\n    });\n  }\n\n  async make_containers(pathname){\n    const isContainer = pathname.endsWith('/');\n    let inexistentParents = []\n    // Get all parents which need to be created\n    let curParent = this._getParent(pathname)\n    while (curParent && !await this.exists(curParent)) {\n      inexistentParents.push(curParent)\n      curParent = this._getParent(curParent)\n    }\n//    if (!curParent) // Should not happen, that we get to the root\n//      Promise.resolve();\n\n    if(isContainer) inexistentParents.push(pathname);\n    // Create missing parents\n    while (inexistentParents.length) {\n      let  container = inexistentParents.pop().slice(0, -1)\n      this.log(\"Creating container \",container)\n      try{\n        await this.fs.mkdir(container)\n      }\n      catch(e){ console.warn(e); }\n    }\n    Promise.resolve();\n  }\n\n  _getParent(url) {\n    if(typeof url==='object')url=url.href;\n    while (url.endsWith('/')) url = url.slice(0, -1);\n    if (!url.includes('/')) return null;\n    return url.substring(0, url.lastIndexOf('/')) + '/';\n  }\n\n  async exists(pathname){\n    try {        \n      let res = await this.readFolder(pathname)\n      if(res.code==='ENOENT') return Promise.resolve(false);\n      this.log('exists',pathname)\n      return Promise.resolve(true)\n    }\n    catch(e){ \n      try {        \n        let res = await this.readFile(pathname)\n        if(res.code==='ENOENT') return Promise.resolve(false);\n        this.log('exists',pathname)\n        return Promise.resolve(true)\n      }\n      catch(e){\n        this.log('does not exist',pathname)\n        return Promise.resolve(false) \n      }\n    }\n  }\n\n  async getContainer(path){\n    let folderArray = await this.readFolder(path);\n    if(folderArray.code) return Promise.reject(code)\n    folderArray = folderArray.filter((i)=>!i.endsWith('.type'));\n    let pathname = path;\n    let str = \"@prefix : <#>. @prefix ldp: <http://www.w3.org/ns/ldp#>.\\n\" + \"<> a ldp:BasicContainer, ldp:Container\";\n    if (folderArray.length) {\n      str = str + \"; ldp:contains\\n\";\n      for (var i = 0; i < folderArray.length; i++) {\n        let fn = folderArray[i];\n        fn = encodeURI(fn);\n        str = str + `  <${fn}>,\\n`;\n      }\n      str = str.replace(/,\\n$/, \"\");\n    }\n    str = str + `.\\n`;\n    return(str);\n  }\n\n\n  async readFolder(fn){\n    return new Promise( async (resolve, reject) => {\n      try {\n        this.fs.readdir(fn,async (err,folderArray)=>{\n          if(err) resolve(err)\n          else {\n              return resolve(folderArray)\n          }\n        })\n      } catch(e) { resolve(e) }\n    })\n  }\n\n  async dump(path) {\n    path ||= \"/\" \n    path = path.replace(/^\\/\\//,'/');\n    if(path != '/') path = path + \"/\";\n    let top = await this.readFolder(path);\n    if(typeof top === 'string') return;;\n    for(let c of top){\n      let contains = await this.readFolder(c);\n      console.log(c,contains);\n    }\n  }\n\n  log(...args){\n    if(this.DEBUG) console.log(args);\n  }\n\n}\n\n"],"names":["root","factory","exports","module","define","amd","self","getRandomValues","__webpack_require__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","byteToHex","i","push","toString","substr","options","buf","offset","rnds","random","arr","arguments","length","undefined","toLowerCase","TypeError","SolidRestBrowser","constructor","this","DEBUG","async","uri","method","fn","replace","isContainer","endsWith","content","URL","success","ok","status","statusText","headers","Date","failure","make_containers","writeFile","body","Response","e","console","log","getContainer","readFile","config","fs","size","storeName","Promise","resolve","reject","BrowserFS","configure","BFSRequire","kb","browserFSconfig","httpOnly","$rdf","fetcher","scheme","browser","http","fetch","currentScheme","err","pathname","inexistentParents","curParent","_getParent","exists","container","pop","slice","mkdir","warn","url","href","includes","substring","lastIndexOf","readFolder","code","path","folderArray","filter","str","encodeURI","readdir","top","c","contains","args"],"sourceRoot":""}